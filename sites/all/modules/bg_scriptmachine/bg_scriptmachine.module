<?php
define('PERMISSION_ACCESS_SCRIPTMACHINE_API', 'access scriptmachine api');

/**
 * Implementation of hook_permission()
 */
function bg_scriptmachine_permission() {
  return array(
    PERMISSION_ACCESS_SCRIPTMACHINE_API => array(
      'title' => t('Access Script Machine'),
      'description' => t('Access API of the Script Machine.'),
    ),
  );
}

/**
 * Implementation of hook_menu()
 */
function bg_scriptmachine_menu() {
  $items = array();

  $items['api/scriptmachine'] = array(
    'page callback'     => 'bg_scriptmachine_api',
    'page arguments'    => array(2),
    'access callback'	=> TRUE,
    'type'              => MENU_CALLBACK,
  );
  $items['scriptmachine'] = array(
    'title'				=> 'Scriptmachine',
    'page callback'     => 'bg_scriptmachine',
    'access callback'	=> TRUE,
    'type'              => MENU_CALLBACK,
  );
  $items['scriptmachine/settings'] = array(
    'title'				=> 'Scriptmachine',
    'page callback'     => 'bg_scriptmachine_settings',
    'access callback'	=> TRUE,
    'type'              => MENU_CALLBACK,
  );
  $items['admin/config/scriptmachine'] = array(
    'title'             => 'Scriptmachine Settings',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('bg_scriptmachine_admin_settings'),
    'type'              => MENU_NORMAL_ITEM,
    'access arguments'  => array('administer site configuration'),
  );

  return $items;
}

function bg_scriptmachine_admin_settings() {
  $form = array();

  $form['bg_scriptmachine_server'] = array(
    '#type' => 'textfield',
    '#title' => 'Scriptmachine Server',
    '#default_value' => variable_get('bg_scriptmachine_server','http://beeldgeluid.localhost/api/scriptmachine/'),
  );
  $form['bg_scriptmachine_urlStore'] = array(
    '#type' => 'textfield',
    '#title' => 'Scriptmachine urlStore',
    '#default_value' => variable_get('bg_scriptmachine_urlStore','http://beeldgeluid.localhost/api/scriptmachine/store'),
  );
  $form['bg_scriptmachine_urlLoad'] = array(
    '#type' => 'textfield',
    '#title' => 'Scriptmachine urlLoad',
    '#default_value' => variable_get('bg_scriptmachine_urlLoad','http://beeldgeluid.localhost/api/scriptmachine/scripts'),
  );
  $form['bg_scriptmachine_urlCheckLogin'] = array(
    '#type' => 'textfield',
    '#title' => 'Scriptmachine urlCheckLogin',
    '#default_value' => variable_get('bg_scriptmachine_urlCheckLogin','http://beeldgeluid.localhost/api/scriptmachine/check_login'),
  );
  $form['bg_scriptmachine_urlSendToFriend'] = array(
    '#type' => 'textfield',
    '#title' => 'Scriptmachine urlSendToFriend',
    '#default_value' => variable_get('bg_scriptmachine_urlSendToFriend','http://beeldgeluid.localhost/api/scriptmachine/notify'),
  );

  return system_settings_form($form);
}

function bg_scriptmachine_settings() {
  $dir = base_path() . drupal_get_path('module', 'bg_scriptmachine');

  $server = variable_get('bg_scriptmachine_server','http://beeldgeluid.localhost/api/scriptmachine/');
  $urlStore = variable_get('bg_scriptmachine_urlStore','http://beeldgeluid.localhost/api/scriptmachine/store');
  $urlLoad = variable_get('bg_scriptmachine_urlLoad','http://beeldgeluid.localhost/api/scriptmachine/scripts');
  $urlCheckLogin = variable_get('bg_scriptmachine_urlCheckLogin','http://beeldgeluid.localhost/api/scriptmachine/check_login');
  $urlSendToFriend = variable_get('bg_scriptmachine_urlSendToFriend','http://beeldgeluid.localhost/api/scriptmachine/notify');

  echo <<<SETTINGS
&server=$server&
&urlStore=$urlStore&
&urlLoad=$urlLoad&
&urlCheckLogin=$urlCheckLogin&
&urlSendToFriend=$urlSendToFriend&

&___VOOR_REMOTE___&
&swfRoot=$dir/flash/_swf/scriptmachine/&
&libraryRoot=$dir/flash/_swf/library/&

SETTINGS;
  exit;
}

function bg_scriptmachine() {
  // Creates a new object wrapping the given file (path)
  $swf = new SWFObject(base_path() . drupal_get_path('module', 'bg_scriptmachine') . '/flash/scriptmachine_media.swf');
  $swf->height(520)
      ->width(970);

  // Theme the object and return that to the client.
  return theme('swfembed_embed', array('swf' => $swf));
}

/**
 * Scriptmachine API call handler
 * Handles calls to the scriptmachine API from Flash.
 * @param String $action
 */
function bg_scriptmachine_api($action) {
  global $user;

  if (user_access(PERMISSION_ACCESS_SCRIPTMACHINE_API)) {
    $api_action = '_bg_scriptmachine_api_' . $action;

    if (function_exists($api_action)) {
      try {
        $xml_response = $api_action();
      }
      catch (Exception $e) {
        $xml_response = _bg_scriptmachine_create_error_document($e->getMessage(), $e->getCode());
      }
    }
    else {
      // Throw error
      $xml_response = _bg_scriptmachine_create_error_document('API is not avaialble', '1001');
    }
  }
  else {
    // Throw error
    $xml_response = _bg_scriptmachine_create_error_document('Unauthorized', '1002');
  }

  header('Content-Type: application/xml');
  echo $xml_response->saveXML();
  exit;
}

function bg_scriptmachine_mail($key, &$message, $params) {
  switch($key) {
    case 'notify':
      $langcode = $message['language']->language;
      $message['subject'] = t('A message from !name', array('!name' => $params['from_name']), array('langcode' => $langcode));
      break;
  }
}

function _bg_scriptmachine_api_scripts() {
  global $user;
  $xml_response = new DOMDocument('1.0', 'UTF-8');
  $uid = $user->uid;

  if ($uid <= 0) {
    throw new Exception('Missing or invalid userid argument', 4);
  }
  else {
    $query = "SELECT `fid` FROM {bg_scriptmachine} WHERE `uid` = :uid";
    $file = file_load(db_query($query, array(':uid' => $uid))->fetchColumn());

    if ($file === FALSE || !file_exists($file_path = drupal_realpath($file->uri))) {
      throw new Exception('Missing user document, create a new one if you please.', 8);
    }
    else {
      $xml_response->load($file_path);
    }
  }

  return $xml_response;
}

function _bg_scriptmachine_api_store() {
  global $user;
  $document = new DOMDocument('1.0', 'UTF-8');
  $xml_response = _bg_scriptmachine_create_ok_document();
  $uid = $user->uid;

  if (!is_numeric($uid)) {
    throw new Exception('Missing or invalid userid argument', 4);
  }
  else {
    $document->load('php://input');

    $query = "SELECT `fid` FROM {bg_scriptmachine} WHERE `uid` = :uid";
    $original_file = file_load(db_query($query, array(':uid' => $uid))->fetchColumn());

    if ($original_file === FALSE || !file_exists(drupal_realpath($original_file->uri))) {
      $path = file_build_uri('user/' . $uid . '/scriptmachine.xml');
      file_prepare_directory(drupal_dirname($path), FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
    }
    else {
      $path = $original_file->uri;
    }

    $new_file = file_save_data($document->saveXML(), $path, FILE_EXISTS_REPLACE);

    if ($new_file === FALSE) {
      throw new Exception('Could not create script', 8);
    }
    else if ($original_file === FALSE) {
      $fields = array('uid' => $uid, 'fid' => $new_file->fid, 'created' => REQUEST_TIME, 'changed' => REQUEST_TIME);
      db_insert('bg_scriptmachine')
        ->fields($fields)
        ->execute();
    }
    else {
      $fields = array('changed' => REQUEST_TIME);
      db_update('bg_scriptmachine')
        ->condition('uid', $uid)
        ->condition('fid', $new_file->fid)
        ->fields($fields)
        ->execute();
    }
  }

  return $xml_response;
}

function _bg_scriptmachine_api_notify() {
  global $user;
  global $language;
  $xml_response = _bg_scriptmachine_create_ok_document();
  $params = array();

  $params['uid'] = $user->uid;
  $params['sid'] = $_POST['sID'];

  $params['from_name'] = $_POST['namefrom'];
  $params['from_email'] = $_POST['emailfrom'];

  $params['to_name'] = $_POST['namefriend'];
  $params['to_email'] = $_POST['emailfriend'];

  $params['message'] = $_POST['message'];

  if (!is_numeric($params['uid'])) {
    throw new Exception('Missing or invalid userid argument', 4);
  }
  else if (empty($params['from_email'])) {
    throw new Exception('Afzender adres ontbreekt');
  }
  else if (empty($params['to_email'])) {
    throw new Exception('Ontvanger adres ontbreekt.');
  }
  else {
    $params['script_url'] = url(variable_get('bg_scriptmachine_url', ''), array('absolute' => TRUE, 'query' => array('uID' => $params['uid'], 'sID' => $params['sid'])));
    drupal_mail('bg_scriptmachine', 'notify', $params['to_email'], $language, $params);
  }

  return $xml_response;
}

function _bg_scriptmachine_api_check_login() {
  $xml_response = _bg_scriptmachine_create_ok_document();

  return $xml_response;
}

function _bg_scriptmachine_create_error_document($message, $code) {
  $document = new DOMDocument('1.0', 'UTF-8');
  $root = $document->createElement('response');
  $document->appendChild($root);
  $e = $document->createElement('error');
  $root->appendChild($e);
  $e->setAttribute('code', $code);
  $e->appendChild($document->createTextNode(t($message)));
  return $document;
}

function _bg_scriptmachine_create_ok_document() {
  $document = new DOMDocument('1.0', 'UTF-8');
  $root = $document->createElement('response');
  $document->appendChild($root);
  $e = $document->createElement('ok');
  $root->appendChild($e);
  return $document;
}
