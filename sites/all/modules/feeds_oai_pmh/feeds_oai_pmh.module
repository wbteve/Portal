<?php

/**
 * Implementation of hook_feed_plugins().
 */
function feeds_oai_pmh_feeds_plugins() {
  $info = array();
  $info['FeedsOAIHTTPFetcher'] = array(
    'name' => 'HTTP OAI-PMH Fetcher',
    'description' => 'Download content from an OAI-PMH repository.',
    'help' => 'Queries an OAI-PMH endpoint of an online repository for data, starting after the last-imported record.',
    'handler' => array(
      'parent' => 'FeedsHTTPFetcher', // This is the key name, not the class name.
      'class' => 'FeedsOAIHTTPFetcher',
      'file' => 'FeedsOAIHTTPFetcher.inc',
      'path' => drupal_get_path('module', 'feeds_oai_pmh'),
    ),
  );
  $info['FeedsOAIParser'] = array(
    'name' => 'OAI parser',
    'description' => 'Parse Dublin Core (oai_dc) metadata from OAI-PMH repositories.',
    'handler' => array(
      'parent' => 'FeedsParser',
      'class' => 'FeedsOAIParser',
      'file' => 'FeedsOAIParser.inc',
      'path' => drupal_get_path('module', 'feeds_oai_pmh'),
    ),
  );
  return $info;
}

/**
 * Return a "drupalized" hierarchic options form element for the sets in a repository.
 */
function feeds_oai_pmh_sets_options($sets) {
  $options = array('' => t('[all sets]'));
  if (is_array($sets)) {
    ksort($sets);
    $last_depth = 0;
    foreach ($sets as $set_spec => $set_data) {
      $levels = explode(':', $set_spec);
      $label = str_repeat('--', sizeof($levels)-1) . $set_data['name'];
      $options[$set_spec] = "[$set_spec] $label";
    }
  }
  return $options;
}

function feeds_oai_pmh_ajax_callback($form, $form_state) {
  require_once(drupal_get_path('module', 'feeds_oai_pmh') . '/feeds_oai_pmh.inc');
  
  // Validate the repository.
  $oai_source_url = $form_state['values']['feeds']['FeedsOAIHTTPFetcher']['source'];
  
  $result = feeds_oai_pmh_identify($oai_source_url);
  
  if ($result['status'] == 0) {
    // OAI-PMH Identify verb returned OK.
    // Change the form's set element.
    $form['feeds']['FeedsOAIHTTPFetcher']['set']['#options'] = feeds_oai_pmh_sets_options($result['repository']['sets']);
  }
  else {
    // Empty sets.
    $form['feeds']['FeedsOAIHTTPFetcher']['set']['#options'] = feeds_oai_pmh_sets_options(array());
    drupal_set_message($result['output'], 'error');
  }
  
  return $form['feeds']['FeedsOAIHTTPFetcher']['set'];
}

